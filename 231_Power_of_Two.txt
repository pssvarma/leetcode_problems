Solution 1 : Recursion

class Solution {
    public boolean isPowerOfTwo(int n) {

        if (n==0 ) return false;
        if (n==1)  return true;    
        if (n%2!=0) return false;

      return true & isPowerOfTwo(n/2);
    }    
}

Solution 2 :  Bit Manipulation

Ref : https://medium.com/@Neelesh-Janga/q-231-leetcode-power-of-two-121621e4f041

class Solution {
    public boolean isPowerOfTwo(int n) { 
     return  (n>0)&((n) & (n-1)) ==0;    
    }
}

Solution 3 :  
public class Solution {
    public boolean isPowerOfTwo(int n) {
        if (n == 0) return false;
        
        while (n > 0) {
            if (n == 1) return true;
            if (n % 2 != 0) break;
            n /= 2;
        }
        return false;
    }
}

Refer for other ways : https://leetcode.com/problems/power-of-two/solutions/4748857/8-approaches-c-java-python-javascript-explained/?submissionId=1203287331 